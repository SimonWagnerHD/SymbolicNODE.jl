  Activating project at `~/home/SymbolicNODE.jl`
┌ Warning: ZygoteVJP tried and failed in the automated AD choice algorithm with the following error. (To turn off this printing, add `verbose = false` to the `solve` call)
└ @ SciMLSensitivity ~/.julia/packages/SciMLSensitivity/dM3nj/src/concrete_solve.jl:80
DimensionMismatch: layer Dense(4 => 16, relu) expects size(input, 1) == 4, but got 8-element Vector{Float32}┌ Warning: ReverseDiffVJP tried and failed in the automated AD choice algorithm with the following error. (To turn off this printing, add `verbose = false` to the `solve` call)
└ @ SciMLSensitivity ~/.julia/packages/SciMLSensitivity/dM3nj/src/concrete_solve.jl:93
MethodError: no method matching gradient(::SciMLSensitivity.var"#255#258"{ODEProblem{false,Vector{Float32},Tuple{Float32, Float32},…}}, ::Vector{Float32}, ::Vector{Float32})

Some of the types have been truncated in the stacktrace for improved reading. To emit complete information
in the stack trace, evaluate `TruncatedStacktraces.VERBOSE[] = true` and re-run the code.

Closest candidates are:
  gradient(::Any, ::Any) at ~/.julia/packages/ReverseDiff/YkVxM/src/api/gradients.jl:21
  gradient(::Any, ::Any, !Matched::ReverseDiff.GradientConfig) at ~/.julia/packages/ReverseDiff/YkVxM/src/api/gradients.jl:21┌ Warning: TrackerVJP tried and failed in the automated AD choice algorithm with the following error. (To turn off this printing, add `verbose = false` to the `solve` call)
└ @ SciMLSensitivity ~/.julia/packages/SciMLSensitivity/dM3nj/src/concrete_solve.jl:107
MethodError: vcat(::Vector{Tracker.TrackedReal{Float32}}, ::TrackedArray{…,Vector{Float32}}) is ambiguous. Candidates:
  vcat(V::AbstractVector...) in Base at abstractarray.jl:1563
  vcat(A::AbstractVecOrMat...) in Base at abstractarray.jl:1625
  vcat(A::Union{LinearAlgebra.UniformScaling, AbstractVecOrMat}...) in LinearAlgebra at /p/system/packages/julia/1.8.2/share/julia/stdlib/v1.8/LinearAlgebra/src/uniformscaling.jl:408
  vcat(A::Union{Number, LinearAlgebra.UniformScaling, AbstractVecOrMat}...) in LinearAlgebra at /p/system/packages/julia/1.8.2/share/julia/stdlib/v1.8/LinearAlgebra/src/uniformscaling.jl:409
  vcat(var"315"::AbstractArray, x::Union{Tracker.TrackedArray, Tracker.TrackedReal}, xs::Union{Number, AbstractArray}...) in Tracker at /home/simonwa/.julia/packages/Tracker/9xWLl/src/lib/array.jl:174
Possible fix, define
  vcat(::AbstractVector, ::Tracker.TrackedVector{T, A} where {T, A<:AbstractVector{T}}, ::Vararg{AbstractVector})┌ Warning: Reverse-Mode AD VJP choices all failed. Falling back to numerical VJPs
└ @ SciMLSensitivity ~/.julia/packages/SciMLSensitivity/dM3nj/src/concrete_solve.jl:117
ERROR: LoadError: DimensionMismatch: layer Dense(4 => 16, relu) expects size(input, 1) == 4, but got 8-element Vector{Float32}
Stacktrace:
  [1] _size_check(layer::Flux.Dense{typeof(NNlib.relu), Matrix{Float32}, Vector{Float32}}, x::Vector{Float32}, ::Pair{Int64, Int64})
    @ Flux ~/.julia/packages/Flux/Nzh8J/src/layers/basic.jl:195
  [2] (::Flux.Dense{typeof(NNlib.relu), Matrix{Float32}, Vector{Float32}})(x::Vector{Float32})
    @ Flux ~/.julia/packages/Flux/Nzh8J/src/layers/basic.jl:171
  [3] macro expansion
    @ ~/.julia/packages/Flux/Nzh8J/src/layers/basic.jl:53 [inlined]
  [4] _applychain
    @ ~/.julia/packages/Flux/Nzh8J/src/layers/basic.jl:53 [inlined]
  [5] (::Flux.Chain{Tuple{Flux.Dense{typeof(NNlib.relu), Matrix{Float32}, Vector{Float32}}, Flux.Dense{typeof(NNlib.relu), Matrix{Float32}, Vector{Float32}}, Flux.Dense{typeof(NNlib.relu), Matrix{Float32}, Vector{Float32}}, Flux.Dense{typeof(identity), Matrix{Float32}, Vector{Float32}}}})(x::Vector{Float32})
    @ Flux ~/.julia/packages/Flux/Nzh8J/src/layers/basic.jl:51
  [6] node(u::Vector{Float32}, p::Vector{Float32}, t::Float32)
    @ Main ~/home/SymbolicNODE.jl/scripts/refine_sindy_node_cat.jl:35
  [7] ODEFunction
    @ ~/.julia/packages/SciMLBase/E9FrD/src/scimlfunctions.jl:2404 [inlined]
  [8] initialize!(integrator::ODEIntegrator{false,Tsit5{Static.False,…},Vector{Float32},Float32,…}, cache::OrdinaryDiffEq.Tsit5ConstantCache)
    @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/yspeT/src/perform_step/low_order_rk_perform_step.jl:700
  [9] __init(prob::ODEProblem{false,Vector{Float32},Tuple{Float32, Float32},…}, alg::Tsit5{Static.False,…}, timeseries_init::Tuple{}, ts_init::Tuple{}, ks_init::Tuple{}, recompile::Type{Val{true}}; saveat::Tuple{}, tstops::Tuple{}, d_discontinuities::Tuple{}, save_idxs::Nothing, save_everystep::Bool, save_on::Bool, save_start::Bool, save_end::Bool, callback::Nothing, dense::Bool, calck::Bool, dt::Float32, dtmin::Nothing, dtmax::Float32, force_dtmin::Bool, adaptive::Bool, gamma::Rational{Int64}, abstol::Nothing, reltol::Nothing, qmin::Rational{Int64}, qmax::Int64, qsteady_min::Int64, qsteady_max::Int64, beta1::Nothing, beta2::Nothing, qoldinit::Rational{Int64}, controller::Nothing, fullnormalize::Bool, failfactor::Int64, maxiters::Int64, internalnorm::typeof(DiffEqBase.ODE_DEFAULT_NORM), internalopnorm::typeof(LinearAlgebra.opnorm), isoutofdomain::typeof(DiffEqBase.ODE_DEFAULT_ISOUTOFDOMAIN), unstable_check::typeof(DiffEqBase.ODE_DEFAULT_UNSTABLE_CHECK), verbose::Bool, timeseries_errors::Bool, dense_errors::Bool, advance_to_tstop::Bool, stop_at_next_tstop::Bool, initialize_save::Bool, progress::Bool, progress_steps::Int64, progress_name::String, progress_message::typeof(DiffEqBase.ODE_DEFAULT_PROG_MESSAGE), userdata::Nothing, allow_extrapolation::Bool, initialize_integrator::Bool, alias_u0::Bool, alias_du0::Bool, initializealg::OrdinaryDiffEq.DefaultInit, kwargs::Base.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:save_noise,), Tuple{Bool}}})
    @ OrdinaryDiffEq ~/.julia/packages/OrdinaryDiffEq/yspeT/src/solve.jl:499
 [10] #__solve#627
    @ ~/.julia/packages/OrdinaryDiffEq/yspeT/src/solve.jl:5 [inlined]
 [11] #solve_call#22
    @ ~/.julia/packages/DiffEqBase/qPmC2/src/solve.jl:509 [inlined]
 [12] solve_up(prob::ODEProblem{false,Vector{Float32},Tuple{Float32, Float32},…}, sensealg::Nothing, u0::Vector{Float32}, p::Vector{Float32}, args::Tsit5{Static.False,…}; kwargs::Base.Pairs{Symbol, Bool, NTuple{4, Symbol}, NamedTuple{(:save_noise, :save_start, :save_end, :verbose), NTuple{4, Bool}}})
    @ DiffEqBase ~/.julia/packages/DiffEqBase/qPmC2/src/solve.jl:932
 [13] #solve#27
    @ ~/.julia/packages/DiffEqBase/qPmC2/src/solve.jl:842 [inlined]
 [14] _concrete_solve_adjoint(::ODEProblem{false,Vector{Float32},Tuple{Float32, Float32},…}, ::Tsit5{Static.False,…}, ::InterpolatingAdjoint{Bool,…}, ::Vector{Float32}, ::Vector{Float32}, ::SciMLBase.ChainRulesOriginator; save_start::Bool, save_end::Bool, saveat::Vector{Float32}, save_idxs::Nothing, kwargs::Base.Pairs{Symbol, Bool, Tuple{Symbol}, NamedTuple{(:verbose,), Tuple{Bool}}})
    @ SciMLSensitivity ~/.julia/packages/SciMLSensitivity/dM3nj/src/concrete_solve.jl:304
 [15] _concrete_solve_adjoint(::ODEProblem{false,Vector{Float32},Tuple{Float32, Float32},…}, ::Tsit5{Static.False,…}, ::Nothing, ::Vector{Float32}, ::Vector{Float32}, ::SciMLBase.ChainRulesOriginator; verbose::Bool, kwargs::Base.Pairs{Symbol, Vector{Float32}, Tuple{Symbol}, NamedTuple{(:saveat,), Tuple{Vector{Float32}}}})
    @ SciMLSensitivity ~/.julia/packages/SciMLSensitivity/dM3nj/src/concrete_solve.jl:188
 [16] #_solve_adjoint#53
    @ ~/.julia/packages/DiffEqBase/qPmC2/src/solve.jl:1348 [inlined]
 [17] #rrule#51
    @ ~/.julia/packages/DiffEqBase/qPmC2/src/solve.jl:1301 [inlined]
 [18] chain_rrule_kw
    @ ~/.julia/packages/Zygote/hLzJT/src/compiler/chainrules.jl:235 [inlined]
 [19] macro expansion
    @ ~/.julia/packages/Zygote/hLzJT/src/compiler/interface2.jl:0 [inlined]
 [20] _pullback
    @ ~/.julia/packages/Zygote/hLzJT/src/compiler/interface2.jl:9 [inlined]
 [21] _apply
    @ ./boot.jl:816 [inlined]
 [22] adjoint
    @ ~/.julia/packages/Zygote/hLzJT/src/lib/lib.jl:203 [inlined]
 [23] _pullback
    @ ~/.julia/packages/ZygoteRules/AIbCs/src/adjoint.jl:65 [inlined]
 [24] _pullback
    @ ~/.julia/packages/DiffEqBase/qPmC2/src/solve.jl:842 [inlined]
 [25] _pullback(::Zygote.Context{false}, ::DiffEqBase.var"##solve#27", ::Nothing, ::Nothing, ::Nothing, ::Val{true}, ::Base.Pairs{Symbol, Vector{Float32}, Tuple{Symbol}, NamedTuple{(:saveat,), Tuple{Vector{Float32}}}}, ::typeof(solve), ::ODEProblem{false,Vector{Float32},Tuple{Float32, Float32},…}, ::Tsit5{Static.False,…})
    @ Zygote ~/.julia/packages/Zygote/hLzJT/src/compiler/interface2.jl:0
 [26] _apply(::Function, ::Vararg{Any})
    @ Core ./boot.jl:816
 [27] adjoint
    @ ~/.julia/packages/Zygote/hLzJT/src/lib/lib.jl:203 [inlined]
 [28] _pullback
    @ ~/.julia/packages/ZygoteRules/AIbCs/src/adjoint.jl:65 [inlined]
 [29] _pullback
    @ ~/.julia/packages/DiffEqBase/qPmC2/src/solve.jl:832 [inlined]
 [30] _pullback(::Zygote.Context{false}, ::CommonSolve.var"#solve##kw", ::NamedTuple{(:saveat,), Tuple{Vector{Float32}}}, ::typeof(solve), ::ODEProblem{false,Vector{Float32},Tuple{Float32, Float32},…}, ::Tsit5{Static.False,…})
    @ Zygote ~/.julia/packages/Zygote/hLzJT/src/compiler/interface2.jl:0
 [31] _pullback
    @ ~/home/SymbolicNODE.jl/src/NeuralODE.jl:43 [inlined]
 [32] _pullback(::Zygote.Context{false}, ::NODE{Vector{Float32}, ODEProblem{false,Vector{Float32},Tuple{Float32, Float32},…}, Tsit5{Static.False,…}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}}, ::Tuple{Vector{Float32}, Matrix{Float32}}, ::Vector{Float32})
    @ Zygote ~/.julia/packages/Zygote/hLzJT/src/compiler/interface2.jl:0
 [33] _pullback
    @ ~/home/SymbolicNODE.jl/src/NeuralODE.jl:42 [inlined]
 [34] _pullback(ctx::Zygote.Context{false}, f::NODE{Vector{Float32}, ODEProblem{false,Vector{Float32},Tuple{Float32, Float32},…}, Tsit5{Static.False,…}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}}, args::Tuple{Vector{Float32}, Matrix{Float32}})
    @ Zygote ~/.julia/packages/Zygote/hLzJT/src/compiler/interface2.jl:0
 [35] _pullback
    @ ~/home/SymbolicNODE.jl/src/NeuralODE.jl:88 [inlined]
 [36] _pullback(ctx::Zygote.Context{false}, f::NeuralODE.var"#7#8"{typeof(Flux.Losses.mse), Matrix{Float32}, Vector{Float32}}, args::NODE{Vector{Float32}, ODEProblem{false,Vector{Float32},Tuple{Float32, Float32},…}, Tsit5{Static.False,…}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
    @ Zygote ~/.julia/packages/Zygote/hLzJT/src/compiler/interface2.jl:0
 [37] pullback(f::Function, cx::Zygote.Context{false}, args::NODE{Vector{Float32}, ODEProblem{false,Vector{Float32},Tuple{Float32, Float32},…}, Tsit5{Static.False,…}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
    @ Zygote ~/.julia/packages/Zygote/hLzJT/src/compiler/interface.jl:44
 [38] pullback
    @ ~/.julia/packages/Zygote/hLzJT/src/compiler/interface.jl:42 [inlined]
 [39] withgradient(f::Function, args::NODE{Vector{Float32}, ODEProblem{false,Vector{Float32},Tuple{Float32, Float32},…}, Tsit5{Static.False,…}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
    @ Zygote ~/.julia/packages/Zygote/hLzJT/src/compiler/interface.jl:132
 [40] train_NODE(model::NODE{Vector{Float32}, ODEProblem{false,Vector{Float32},Tuple{Float32, Float32},…}, Tsit5{Static.False,…}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}}, train_data::NODEData.NODEDataloader{Matrix{Float32}, Vector{Float32}, Int64}, epochs::Int64; valid_data::NODEData.NODEDataloader{Matrix{Float32}, Vector{Float32}, Int64}, η::Float32, print_every::Int64)
    @ NeuralODE ~/home/SymbolicNODE.jl/src/NeuralODE.jl:87
 [41] top-level scope
    @ ~/home/SymbolicNODE.jl/scripts/refine_sindy_node_cat.jl:40
in expression starting at /home/simonwa/home/SymbolicNODE.jl/scripts/refine_sindy_node_cat.jl:40
